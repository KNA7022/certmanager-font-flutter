# 证书管理系统 API 文档

## 基础信息
- **服务器地址**: http://localhost:8080
- **认证方式**: JWT Token (Bearer Token)
- **响应格式**: JSON
- **字符编码**: UTF-8
- **版本**: v2.0

## 通用响应格式
```json
{
  "success": true/false,
  "message": "操作结果描述",
  "data": {}, // 具体数据
  "code": 200 // HTTP状态码
}
```

## 认证说明
需要认证的接口需要在请求头中添加：
```
Authorization: Bearer {your_jwt_token}
```

---

## 1. 用户认证

### 1.1 用户注册
**POST** `/api/auth/register`

**权限**: 公开访问

**请求体**:
```json
{
  "username": "testuser",
  "password": "123456",
  "realName": "测试用户",
  "email": "test@example.com"
}
```

**成功响应**:
```json
{
  "success": true,
  "message": "注册成功",
  "data": {
    "id": 1,
    "username": "testuser",
    "realName": "测试用户",
    "role": "USER",
    "email": "test@example.com",
    "createdAt": "2024-01-01T10:00:00"
  },
  "code": 200
}
```

### 1.2 用户登录
**POST** `/api/auth/login`

**权限**: 公开访问

**请求体**:
```json
{
  "username": "testuser",
  "password": "123456"
}
```

**成功响应**:
```json
{
  "success": true,
  "message": "登录成功",
  "data": {
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
    "user": {
      "id": 1,
      "username": "testuser",
      "realName": "测试用户",
      "role": "USER",
      "email": "test@example.com",
      "createdAt": "2024-01-01T10:00:00"
    }
  },
  "code": 200
}
```

### 1.3 验证Token
**POST** `/api/auth/validate`

**权限**: 公开访问

**请求头**:
```
Authorization: Bearer {your_jwt_token}
```

**成功响应**:
```json
{
  "success": true,
  "message": "令牌验证完成",
  "data": true,
  "code": 200
}
```

---

## 2. 用户信息管理

### 2.1 获取当前用户信息
**GET** `/api/users/me`

**权限**: 需要认证

**成功响应**:
```json
{
  "success": true,
  "message": "获取用户信息成功",
  "data": {
    "id": 1,
    "username": "testuser",
    "realName": "测试用户",
    "role": "USER",
    "email": "test@example.com",
    "createdAt": "2024-01-01T10:00:00"
  },
  "code": 200
}
```

### 2.2 更新用户信息
**PUT** `/api/users/{id}`

**权限**: 仅本人

**请求体**:
```json
{
  "realName": "新的真实姓名",
  "email": "newemail@example.com"
}
```

**成功响应**:
```json
{
  "success": true,
  "message": "更新用户信息成功",
  "data": {
    "id": 1,
    "username": "testuser",
    "realName": "新的真实姓名",
    "role": "USER",
    "email": "newemail@example.com",
    "createdAt": "2024-01-01T10:00:00"
  },
  "code": 200
}
```

### 2.3 修改密码
**PUT** `/api/users/{id}/password`

**权限**: 仅本人

**请求体**:
```json
{
  "oldPassword": "123456",
  "newPassword": "newpassword123"
}
```

**成功响应**:
```json
{
  "success": true,
  "message": "密码修改成功",
  "data": null,
  "code": 200
}
```

---

## 3. 竞赛管理

### 3.1 创建竞赛
**POST** `/api/competitions`

**权限**: 需要认证

**请求体**:
```json
{
  "name": "2024年编程竞赛",
  "description": "面向全体学生的编程竞赛",
  "registrationStart": "2024-01-01T00:00:00",
  "registrationEnd": "2024-01-15T23:59:59",
  "startDate": "2024-02-01T09:00:00",
  "endDate": "2024-02-01T17:00:00"
}
```

**成功响应**:
```json
{
  "success": true,
  "message": "创建竞赛成功",
  "data": {
    "id": 1,
    "userId": 1,
    "username": "testuser",
    "name": "2024年编程竞赛",
    "description": "面向全体学生的编程竞赛",
    "registrationStart": "2024-01-01T00:00:00",
    "registrationEnd": "2024-01-15T23:59:59",
    "startDate": "2024-02-01T09:00:00",
    "endDate": "2024-02-01T17:00:00",
    "createdAt": "2024-01-01T10:00:00",
    "certificateCount": 0
  },
  "code": 200
}
```

### 3.2 获取个人竞赛
**GET** `/api/competitions/{id}`

**权限**: 需要认证

**查询参数**:
- `page`: 页码（从0开始，默认0）
- `size`: 每页大小（默认10）
- `sortBy`: 排序字段（默认id）
- `sortDir`: 排序方向（asc/desc，默认desc）

**成功响应**:
```json
{
  "success": true,
  "message": "获取个人竞赛成功",
  "data": {
    "competitions": [
      {
        "id": 1,
        "userId": 1,
        "username": "testuser",
        "name": "2024年编程竞赛",
        "description": "面向全体学生的编程竞赛",
        "registrationStart": "2024-01-01T00:00:00",
        "registrationEnd": "2024-01-15T23:59:59",
        "startDate": "2024-02-01T09:00:00",
        "endDate": "2024-02-01T17:00:00",
        "createdAt": "2024-01-01T10:00:00",
        "certificateCount": 0
      }
    ],
    "currentPage": 0,
    "totalPages": 1,
    "totalElements": 1,
    "hasNext": false,
    "hasPrevious": false
  },
  "code": 200
}
```

### 3.3 获取即将开始的竞赛
**GET** `/api/competitions/upcoming`

**权限**: 公开访问

**成功响应**:
```json
{
  "success": true,
  "message": "获取即将开始的竞赛成功",
  "data": [
    {
      "id": 1,
      "userId": 1,
      "username": "testuser",
      "name": "2024年编程竞赛",
      "description": "面向全体学生的编程竞赛",
      "registrationStart": "2024-01-01T00:00:00",
      "registrationEnd": "2024-01-15T23:59:59",
      "startDate": "2024-02-01T09:00:00",
      "endDate": "2024-02-01T17:00:00",
      "createdAt": "2024-01-01T10:00:00",
      "certificateCount": 0
    }
  ],
  "code": 200
}
```

### 3.4 获取最近的竞赛
**GET** `/api/competitions/recent`

**权限**: 公开访问

**成功响应**: 格式同3.3

### 3.5 获取竞赛详情
**GET** `/api/competitions/{id}`

**权限**: 公开访问

**成功响应**:
```json
{
  "success": true,
  "message": "获取竞赛详情成功",
  "data": {
    "id": 1,
    "userId": 1,
    "username": "testuser",
    "name": "2024年编程竞赛",
    "description": "面向全体学生的编程竞赛",
    "registrationStart": "2024-01-01T00:00:00",
    "registrationEnd": "2024-01-15T23:59:59",
    "startDate": "2024-02-01T09:00:00",
    "endDate": "2024-02-01T17:00:00",
    "createdAt": "2024-01-01T10:00:00",
    "certificateCount": 0
  },
  "code": 200
}
```

### 3.6 更新竞赛
**PUT** `/api/competitions/{id}`

**权限**: 竞赛创建者

**请求体**:
```json
{
  "name": "2024年编程竞赛（更新）",
  "description": "面向全体学生的编程竞赛（已更新）",
  "registrationStart": "2024-01-01T00:00:00",
  "registrationEnd": "2024-01-20T23:59:59",
  "startDate": "2024-02-05T09:00:00",
  "endDate": "2024-02-05T17:00:00"
}
```

**成功响应**: 格式同3.1

### 3.7 删除竞赛
**DELETE** `/api/competitions/{id}`

**权限**: 竞赛创建者

**成功响应**:
```json
{
  "success": true,
  "message": "删除竞赛成功",
  "data": null,
  "code": 200
}
```

---

## 4. 证书管理

### 4.1 上传证书
**POST** `/api/certificates/upload`

**权限**: 需要认证

**Content-Type**: `multipart/form-data`

**请求参数**:
- `file`: 证书文件（支持PDF、JPG、PNG格式）
- `competitionId`: 竞赛ID

**成功响应**:
```json
{
  "success": true,
  "message": "证书上传成功",
  "data": {
    "id": 1,
    "competitionId": 1,
    "competitionName": "2024年编程竞赛",
    "username": "testuser",
    "fileName": "certificate.pdf",
    "filePath": "/uploads/certificates/uuid-certificate.pdf",
    "uploadedAt": "2024-01-01T10:00:00"
  },
  "code": 200
}
```

### 4.2 获取我的证书
**GET** `/api/certificates/my`

**权限**: 需要认证

**查询参数**:
- `page`: 页码（从0开始，默认0）
- `size`: 每页大小（默认10）
- `sortBy`: 排序字段（默认id）
- `sortDir`: 排序方向（asc/desc，默认desc）

**成功响应**:
```json
{
  "success": true,
  "message": "获取证书列表成功",
  "data": {
    "certificates": [
      {
        "id": 1,
        "competitionId": 1,
        "competitionName": "2024年编程竞赛",
        "username": "testuser",
        "fileName": "certificate.pdf",
        "filePath": "/uploads/certificates/uuid-certificate.pdf",
        "uploadedAt": "2024-01-01T10:00:00"
      }
    ],
    "currentPage": 0,
    "totalPages": 1,
    "totalElements": 1,
    "hasNext": false,
    "hasPrevious": false
  },
  "code": 200
}
```

### 4.3 根据竞赛获取证书
**GET** `/api/certificates/competition/{competitionId}`

**权限**: 公开访问

**查询参数**: 同4.2

**成功响应**: 格式同4.2

### 4.4 获取最近上传的证书
**GET** `/api/certificates/recent`

**权限**: 公开访问

**成功响应**:
```json
{
  "success": true,
  "message": "获取最近上传的证书成功",
  "data": [
    {
      "id": 1,
      "competitionId": 1,
      "competitionName": "2024年编程竞赛",
      "username": "testuser",
      "fileName": "certificate.pdf",
      "filePath": "/uploads/certificates/uuid-certificate.pdf",
      "uploadedAt": "2024-01-01T10:00:00"
    }
  ],
  "code": 200
}
```

### 4.5 获取证书详情
**GET** `/api/certificates/{id}`

**权限**: 公开访问

**成功响应**:
```json
{
  "success": true,
  "message": "获取证书详情成功",
  "data": {
    "id": 1,
    "competitionId": 1,
    "competitionName": "2024年编程竞赛",
    "username": "testuser",
    "fileName": "certificate.pdf",
    "filePath": "/uploads/certificates/uuid-certificate.pdf",
    "uploadedAt": "2024-01-01T10:00:00"
  },
  "code": 200
}
```

### 4.6 查看证书文件
**GET** `/api/certificates/{id}/view`

**权限**: 需要认证

**成功响应**: 返回文件流（PDF、图片等）

### 4.7 下载证书文件
**GET** `/api/certificates/{id}/download`

**权限**: 需要认证

**成功响应**: 返回文件下载

### 4.8 更新证书
**PUT** `/api/certificates/{id}`

**权限**: 证书所有者

**请求体**:
```json
{
  "fileName": "new-certificate-name.pdf"
}
```

**成功响应**: 格式同4.1

### 4.9 删除证书
**DELETE** `/api/certificates/{id}`

**权限**: 证书所有者

**成功响应**:
```json
{
  "success": true,
  "message": "证书删除成功",
  "data": null,
  "code": 200
}
```

---

## 5. 分类管理

### 5.1 获取分类列表
**GET** `/api/categories`

**权限**: 公开访问

**查询参数**:
- `page`: 页码（从0开始，默认0）
- `size`: 每页大小（默认10）
- `sortBy`: 排序字段（默认id）
- `sortDir`: 排序方向（asc/desc，默认desc）
- `search`: 搜索关键词（可选）

**成功响应**:
```json
{
  "success": true,
  "message": "获取分类列表成功",
  "data": {
    "categories": [
      {
        "id": 1,
        "name": "编程竞赛",
        "description": "各类编程相关的竞赛"
      }
    ],
    "currentPage": 0,
    "totalPages": 1,
    "totalElements": 1,
    "hasNext": false,
    "hasPrevious": false
  },
  "code": 200
}
```

### 5.2 获取所有分类（不分页）
**GET** `/api/categories/all`

**权限**: 公开访问

**成功响应**:
```json
{
  "success": true,
  "message": "获取所有分类成功",
  "data": [
    {
      "id": 1,
      "name": "编程竞赛",
      "description": "各类编程相关的竞赛"
    }
  ],
  "code": 200
}
```

### 5.3 获取分类详情
**GET** `/api/categories/{id}`

**权限**: 公开访问

**成功响应**:
```json
{
  "success": true,
  "message": "获取分类详情成功",
  "data": {
    "id": 1,
    "name": "编程竞赛",
    "description": "各类编程相关的竞赛"
  },
  "code": 200
}
```

---

## 错误码说明

| 状态码 | 说明 |
|--------|------|
| 200 | 操作成功 |
| 400 | 请求参数错误 |
| 401 | 未授权访问，需要登录 |
| 403 | 权限不足 |
| 404 | 资源不存在 |
| 500 | 服务器内部错误 |

## 注意事项

1. **JWT Token有效期**: 24小时，过期后需要重新登录
2. **时间格式**: 统一使用ISO 8601格式 `yyyy-MM-ddTHH:mm:ss`
3. **文件上传**: 支持PDF、JPG、PNG等格式，最大文件大小10MB
4. **分页参数**: 页码从0开始，默认每页10条记录
5. **CORS支持**: 所有接口都支持跨域访问
6. **权限说明**:
   - **公开访问**: 无需认证
   - **需要认证**: 需要有效的JWT Token
   - **仅本人**: 只能操作自己的资源
   - **竞赛创建者**: 只有竞赛创建者可以操作
   - **证书所有者**: 只有证书所有者可以操作

---

**文档更新时间**: 2024-01-01  
**系统版本**: v2.0